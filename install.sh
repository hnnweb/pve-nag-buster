#!/bin/sh
case "$(readlink /proc/$$/exe)" in */bash) set -euo pipefail ;; *) set -eu ;; esac

# pve-nag-buster (v01) https://github.com/foundObjects/pve-nag-buster
# Copyright (C) 2019 /u/seaQueue (reddit.com/u/seaQueue)
#
# Removes Proxmox VE 5.x+ license nags automatically after updates
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

# ensure a predictable environment
PATH=/usr/sbin:/usr/bin:/sbin:/bin
\unalias -a

# installer main body:
_main() {
  # ensure $1 exists so 'set -u' doesn't error out
  { [ "$#" -eq "0" ] && set -- ""; } > /dev/null 2>&1

  case "$1" in
    "--emit")
      # call the emit_script() function to stdout and exit, use this to verify
      # that the base64 encoded script below isn't doing anything malicious
      # does not require root
      emit_script
      ;;
    "--uninstall")
      # uninstall, requires root
      assert_root
      _uninstall
      ;;
    "--install" | "--offline" | "")
      # install dpkg hooks, requires root
      assert_root
      _install "$@"
      ;;
    *)
      # unknown flags, print usage and exit
      _usage
      ;;
  esac
  exit 0
}

_uninstall() {
  set -x
  [ -f "/etc/apt/apt.conf.d/86pbs-nags" ] &&
    rm -f "/etc/apt/apt.conf.d/86pbs-nags"
  [ -f "/usr/share/pbs-nag-buster.sh" ] &&
    rm -f "/usr/share/pbs-nag-buster.sh"

  echo "Script and dpkg hooks removed, please manually remove /etc/apt/sources.list.d/pbs-no-subscription.list if desired"
}

_install() {
  # create hooks and no-subscription repo list, install hook script, run once

  VERSION_CODENAME=''
  ID=''
  . /etc/os-release
  case "$ID" in
    "debian")
      if [ -n "$VERSION_CODENAME" ]; then
        RELEASE="$VERSION_CODENAME"
      else
        RELEASE=$(awk -F"[)(]+" '/VERSION=/ {print $2}' /etc/os-release)
      fi
      ;;
    #"ubuntu") # it doesn't look like this is possible anymore
    #  ;;
    *)
      echo "Sorry, I don't know how to handle your Linux distribution '$ID'"
      exit 1
      ;;
  esac

  # create the pve-no-subscription list
  echo "Creating PBS no-subscription repo list ..."
  cat <<- EOF > "/etc/apt/sources.list.d/pbs-no-subscription.list"
	# .list file automatically generated by pve-nag-buster at $(date)
	#
	# If pve-nag-buster is installed again this file will be overwritten
	#
	# PBS pbs-no-subscription repository provided by proxmox.com,
	# NOT recommended for production use
	deb http://download.proxmox.com/debian/pbs $RELEASE pbs-no-subscription
	EOF

  # create dpkg pre/post install hooks for persistence
  echo "Creating dpkg hooks in /etc/apt/apt.conf.d ..."
  cat <<- 'EOF' > "/etc/apt/apt.conf.d/86pbs-nags"
	DPkg::Pre-Install-Pkgs {
	    "while read -r pkg; do case $pkg in *proxmox-widget-toolkit* | *pve-manager*) touch /tmp/.pbs-nag-buster && exit 0; esac done < /dev/stdin";
	};

	DPkg::Post-Invoke {
	    "[ -f /tmp/.pbs-nag-buster ] && { /usr/share/pbs-nag-buster.sh; rm -f /tmp/.pbs-nag-buster; }; exit 0";
	};
	EOF

  # install the hook script
  temp=''
  if [ "$1" = "--offline" ]; then
    # packed script requested
    temp="$(mktemp)" && trap "rm -f $temp" EXIT
    emit_script > "$temp"
  elif [ -f "pbs-nag-buster.sh" ]; then
    # local copy available
    temp="pbs-nag-buster.sh"
  else
    # fetch from github
    echo "Fetching hook script from GitHub ..."
    tempd="$(mktemp -d)" &&
      trap "echo 'Cleaning up temporary files ...'; rm -f $tempd/*; rmdir $tempd" EXIT
    temp="$tempd/pbs-nag-buster.sh"
    wget https://raw.githubusercontent.com/hnnweb/pbs-nag-buster/master/pbs-nag-buster.sh \
      -q --show-progress -O "$temp"
  fi
  echo "Installing hook script as /usr/share/pbs-nag-buster.sh"
  install -o root -m 0550 "$temp" "/usr/share/pbs-nag-buster.sh"

  echo "Running patch script"
  /usr/share/pbs-nag-buster.sh

  return 0
}

# emit a stored copy of pbs-nag-buster.sh offline -- this is intended to be used during
# offline provisioning where we don't have access to github or a full cloned copy of the
# project

# run 'install.sh --emit' to dump stored script to stdout

# Important: if you're not me you should probably decode this and read it to make sure I'm not doing
#            something malicious like mining dogecoin or stealing your valuable cat pictures

# pbs-nag-buster.sh (v01) encoded below:

emit_script() {
  base64 -d << 'YEET' | unxz
/Td6WFoAAATm1rRGAgAhARwAAAAQz1jM4AXSA3VdABGIQkY99BY0cwoNj8U0dcgO2HeNy1wDK4pt
y340r031QTASEmKppzyBNB4L/Pxy/WJQkDyGooeKoRtdtQHlzWxHT0wfQ3M36PM/8Nu36wlr5Fsa
kBSOaxNOrDovqXEslItob5txll1/2oB0ym0dOXiQnMQY5l5eyKISagiqOpidXMwmETZj9FSGjDtl
AEEs1FtR+qZIP6IMmb5sGHQ+lZ7eTq4/707+N8t1pS5V21QHGvsQz2Fb7860IwiIyfUqnFWzwkuj
6fVROhXZMB2cC2bp7Ui2MWaeMoaiOXoF3ggAxMDAJYoRwMeOPnw1qJ9am3qBlcJOkCYb/nnOg/IO
7O5rY1vxPzzNRtMzWGyu6wQDEtGlyDYMIS52cEZuDBCXIuI2AVZNCfx9QjgeWp7+0GS9hLZe1Rwk
Xq0WuqnGPN/JoXj2NDxGHc+B57LWmHgM2PIwILKf3Yiq4/vSc+5OEu1iTWHsPJOBXspreEiUDQQ0
dZPWuS8g60+zS5aE3B4qm8XZgAaHLoCrPC7hu4DL4LpDg5ZUHglf1dvjcTQ1ZcJNqPLH9K0iNjje
EPKJcyB4R/KvZ099pNDcPjbGot3X6eCpGmyUTeVm5ggWTCwIFLcOqDOi4Gj7gaMj9evokmND03hD
zqjRtRuDC+vUcBbyklZzPSIFAuvFNvyxlrB2BylbTWkZi/VpGBRArfJD1vIfmr9jyvBeB7SYFgi3
EnAJpt4IaQwOzllw6Si/fBmd+AobzZiArbHYEqvM9RjZDqQ61gyv9q5r13DP6/4PV1rD+Cy7JJ86
hJGoXKFbq0WrTNsqW+xwv2N69Ir/7dfYFWPoWrSuvQnV3fbeoF8CRwWTQT8utVe7+pJaDTHZvj65
8++AdsMJw/liJ19jCkUwWImnLgbybS07H0AzafTNn5Ks/RFIMfYHF8hf74Kg5nQSzw+ZESC9hRzC
H5UAvtdm0ElgA0HiZ7ZCaskRXpLHCqjUeimFLEIs4aGOjlfaEgvwBmqxmmxx6h2mV36UhiIofRLe
RERYlfOiCFAgbPSbU3JN6uWE/omeebtAhkIwQfTwc+KJGQhjyOV9txlbQLIG/t0/2liz0VeMmQ0q
E+Q8bZn54XufPZsR2uwQjYeA8cUWNrNFtWOWUN41+P3mtFzNq1x55Evy4dwZkuA3YrMMtMbL/LDw
fyxwYAAAAADgo8gRUlZnPQABkQfTCwAAvTT7n7HEZ/sCAAAAAARZWg==
YEET
}

assert_root() { [ "$(id -u)" -eq '0' ] || { echo "This action requires root." && exit 1; }; }
_usage() { echo "Usage: $(basename "$0") (--emit|--offline|--uninstall)"; }

_main "$@"
